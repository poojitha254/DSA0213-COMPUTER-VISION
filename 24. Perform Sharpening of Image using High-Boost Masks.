import cv2
import numpy as np

def sharpen_with_gradient_masking(image_path):
    # Load the image
    img = cv2.imread("C:/Users/pooji/Downloads/q1(pic1).jpg")

    # Check if the image is loaded successfully
    if img is None:
        print("Error: Image not loaded.")
        return

    # Convert image to grayscale
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    # Calculate gradient in x and y directions
    gradient_x = cv2.Sobel(gray, cv2.CV_64F, 1, 0, ksize=3)
    gradient_y = cv2.Sobel(gray, cv2.CV_64F, 0, 1, ksize=3)

    # Combine gradients to get gradient magnitude
    gradient_magnitude = cv2.addWeighted(cv2.convertScaleAbs(gradient_x), 0.5, 
                                          cv2.convertScaleAbs(gradient_y), 0.5, 0)

    # Add the gradient magnitude to the original image to perform sharpening
    sharpened_image = cv2.addWeighted(gray, 1.5, gradient_magnitude, -0.5, 0)

    # Display the original and sharpened images
    cv2.imshow('Original Image', gray)
    cv2.imshow('Sharpened Image', sharpened_image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Call the function
sharpen_with_gradient_masking("C:/Users/nikitha/Downloads/image.jpeg")
